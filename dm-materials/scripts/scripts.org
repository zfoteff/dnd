:PROPERTIES:
:ID:       18a96883-cc40-409c-9fb5-80d5ab0c8379
:END:
#+title:    Campaign DM Scripts
#+author:   zfoteff
#+date:     [2023-07-12 Wed]
#+summary:  DM scripts for dice rolling and RNG related elements

* Dice Rolling
#+NAME: Dice
#+BEGIN_SRC python :var dice_num=1 :var dice_max_value=6 :var modifier=0
from random import randint
escape_text = "\n+\t"
dice_set = [randint(1, dice_max_value) + modifier for _ in range(dice_num)]
return f"(modifier) {modifier}{escape_text}{escape_text.join(map(str,dice_set))}\n{10*'_'}\n=\t{sum(dice_set)+modifier}"
#+END_SRC

#+RESULTS: Dice
: (modifier) 0
: +	6
: __________
: =	6

#+NAME: Roll D10
#+CALL: Dice(dice_max_value=10)

#+RESULTS: Roll D10
: (modifier) 0
: +	4
: __________
: =	4

#+NAME: Roll D20
#+CALL: Dice(dice_max_value=20)

#+RESULTS: Roll D20
: (modifier) 0
: +	19
: __________
: =	19

#+NAME: Roll D20 with Advantage
* Stat Generation
#+NAME: Generate Stats
#+BEGIN_SRC python :var challenge_rating=1 :var num_to_generate
from random import randint

class Foe:
    def _set_stats(self, challenge_rating: float) -> None:
        pass

    def __init__(self, challenge_rating: float = 0.1, health_points: int = 0, **kwargs) -> None:
        self.__challenge_rating = challenge_rating
        self.__health_points = 0
        self.__name = name

        self._set_stats()

    def __str__(self) -> str:
        return f"{self.name} | {} {} {} {} {} {} {}"

def main():
    pass

if __name__ == "__main__":
    main()
#+END_SRC
